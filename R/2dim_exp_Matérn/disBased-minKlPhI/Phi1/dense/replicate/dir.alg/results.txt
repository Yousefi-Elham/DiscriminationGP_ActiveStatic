design.opt <- cbind(design1.uniq,opt.weight)
> design.opt
               opt.weight
      9.6 0.4 0.030303030
      9.4 2.0 0.049284049
      8.0 1.2 0.038295038
x.hat 9.6 2.4 0.042957043
x.hat 7.8 1.6 0.036963037
x.hat 9.2 0.2 0.039960040
x.hat 9.8 2.0 0.032967033
x.hat 7.6 1.2 0.031968032
x.hat 9.6 0.2 0.015984016
x.hat 9.2 2.2 0.035964036
x.hat 9.4 0.6 0.001998002
x.hat 7.8 1.0 0.034965035
x.hat 9.4 0.0 0.032967033
x.hat 8.0 1.4 0.039960040
x.hat 9.8 0.4 0.036963037
x.hat 9.6 2.2 0.007992008
x.hat 9.2 2.4 0.032967033
x.hat 7.6 1.4 0.036963037
x.hat 9.2 0.4 0.011988012
x.hat 9.4 2.6 0.004995005
x.hat 7.6 1.6 0.004995005
x.hat 7.6 1.0 0.031968032
x.hat 9.4 0.4 0.048951049
x.hat 9.8 2.2 0.036963037
x.hat 9.2 0.0 0.025974026
x.hat 9.4 2.2 0.012987013
x.hat 7.8 1.4 0.019980020
x.hat 9.6 0.6 0.013986014
x.hat 7.4 1.2 0.000999001
x.hat 9.6 2.0 0.035964036
x.hat 7.8 1.2 0.006993007
x.hat 9.6 0.0 0.034965035
x.hat 7.4 1.4 0.000999001
x.hat 9.4 2.4 0.032967033
x.hat 9.4 0.2 0.008991009
x.hat 9.8 0.2 0.030969031
x.hat 9.8 2.4 0.005994006
x.hat 8.0 1.6 0.001998002
x.hat 8.0 1.0 0.029970030
x.hat 7.8 0.8 0.016983017
> nrow(design.opt)
[1] 40
> sum(design.opt[,3])
[1] 1
> Phi.crit1 <- dir.deriv(est.theta,sigma2.ini,design.opt[,c(1,2)],design.opt[,3])
> Phi.opt1 <-  Phi.optim(est.theta,sigma2.ini,design.opt[,c(1,2)],design.opt[,3]) #equal to CRIT.vec[max.iter] 
> Phi.opt1
[1] 0.0231739
> Phi.check <- numeric(N)
> for(i in 1:N){
+   if(Phi.crit1[i] <= Phi.opt1){
+     Phi.check[i] <- 1
+   }else{
+     Phi.check[i] <- 0
+   }
+   
+ }
> length(which(Phi.check==0))
[1] 19
> length(which(Phi.check==0))/N
[1] 0.007304883
> poi <- grid[!Phi.check, ]
> poi
    Var1 Var2
47   9.2  0.0
48   9.4  0.0
49   9.6  0.0
98   9.2  0.2
99   9.4  0.2
100  9.6  0.2
101  9.8  0.2
149  9.2  0.4
150  9.4  0.4
151  9.6  0.4
152  9.8  0.4
202  9.6  0.6
398  8.0  1.4
448  7.8  1.6
558  9.4  2.0
559  9.6  2.0
560  9.8  2.0
608  9.2  2.2
659  9.2  2.4


mm=which(design.opt[,3]>0.01)
> mm
                  x.hat x.hat x.hat x.hat x.hat x.hat x.hat x.hat x.hat x.hat x.hat x.hat x.hat x.hat x.hat x.hat x.hat x.hat x.hat x.hat 
    1     2     3     4     5     6     7     8     9    10    12    13    14    15    17    18    19    22    23    24    25    26    27 
x.hat x.hat x.hat x.hat x.hat x.hat x.hat 
   28    30    32    34    36    39    40 
> design.opt11 <- design.opt[mm,]
> design.opt11
              opt.weight
      9.6 0.4 0.03030303
      9.4 2.0 0.04928405
      8.0 1.2 0.03829504
x.hat 9.6 2.4 0.04295704
x.hat 7.8 1.6 0.03696304
x.hat 9.2 0.2 0.03996004
x.hat 9.8 2.0 0.03296703
x.hat 7.6 1.2 0.03196803
x.hat 9.6 0.2 0.01598402
x.hat 9.2 2.2 0.03596404
x.hat 7.8 1.0 0.03496503
x.hat 9.4 0.0 0.03296703
x.hat 8.0 1.4 0.03996004
x.hat 9.8 0.4 0.03696304
x.hat 9.2 2.4 0.03296703
x.hat 7.6 1.4 0.03696304
x.hat 9.2 0.4 0.01198801
x.hat 7.6 1.0 0.03196803
x.hat 9.4 0.4 0.04895105
x.hat 9.8 2.2 0.03696304
x.hat 9.2 0.0 0.02597403
x.hat 9.4 2.2 0.01298701
x.hat 7.8 1.4 0.01998002
x.hat 9.6 0.6 0.01398601
x.hat 9.6 2.0 0.03596404
x.hat 9.6 0.0 0.03496503
x.hat 9.4 2.4 0.03296703
x.hat 9.8 0.2 0.03096903
x.hat 8.0 1.0 0.02997003
x.hat 7.8 0.8 0.01698302
> nrow(design.opt11)
[1] 30

nrow(design.opt11)
[1] 30
> Phi.crit11 <- dir.deriv(est.theta,sigma2.ini,design.opt11[,c(1,2)],design.opt11[,3])
> Phi.opt11 <-  Phi.optim(est.theta,sigma2.ini,design.opt11[,c(1,2)],design.opt11[,3])  
> Phi.opt11
[1] 0.02109242
> Phi.check11 <- numeric(N)
> for(i in 1:N){
+   if(Phi.crit11[i] <= Phi.opt11){
+     Phi.check11[i] <- 1
+   }else{
+     Phi.check11[i] <- 0
+   }
+   
+ }
> length(which(Phi.check11==0))
[1] 67
> length(which(Phi.check11==0))/N
[1] 0.02575932
> poi11 <- grid[!Phi.check11, ]
> poi11
    Var1 Var2
46   9.0  0.0
47   9.2  0.0
48   9.4  0.0
49   9.6  0.0
50   9.8  0.0
97   9.0  0.2
98   9.2  0.2
99   9.4  0.2
100  9.6  0.2
101  9.8  0.2
102 10.0  0.2
149  9.2  0.4
150  9.4  0.4
151  9.6  0.4
152  9.8  0.4
153 10.0  0.4
200  9.2  0.6
201  9.4  0.6
202  9.6  0.6
203  9.8  0.6
243  7.6  0.8
244  7.8  0.8
245  8.0  0.8
293  7.4  1.0
294  7.6  1.0
295  7.8  1.0
296  8.0  1.0
297  8.2  1.0
344  7.4  1.2
345  7.6  1.2
346  7.8  1.2
347  8.0  1.2
348  8.2  1.2
395  7.4  1.4
396  7.6  1.4
397  7.8  1.4
398  8.0  1.4
399  8.2  1.4
446  7.4  1.6
447  7.6  1.6
448  7.8  1.6
449  8.0  1.6
499  7.8  1.8
507  9.4  1.8
508  9.6  1.8
509  9.8  1.8
557  9.2  2.0
558  9.4  2.0
559  9.6  2.0
560  9.8  2.0
561 10.0  2.0
607  9.0  2.2
608  9.2  2.2
609  9.4  2.2
610  9.6  2.2
611  9.8  2.2
612 10.0  2.2
658  9.0  2.4
659  9.2  2.4
660  9.4  2.4
661  9.6  2.4
662  9.8  2.4
663 10.0  2.4
710  9.2  2.6
711  9.4  2.6
712  9.6  2.6
713  9.8  2.6